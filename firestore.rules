rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthed() { return request.auth != null; }
    function me() { return request.auth.uid; }
    function userDoc(uid) { return get(/databases/$(database)/documents/users/$(uid)); }
    function isAdmin() {
      return isAuthed() && userDoc(me()).data.role == 'admin';
    }

    // ---- Users
    match /users/{userId} {
      allow read: if isAdmin() || (isAuthed() && userId == me());
      allow create: if isAuthed() && userId == me();
      allow update: if isAdmin() || (isAuthed() && userId == me());
    }

    // ---- Intro video acknowledgement (one per role per user)
    match /acknowledgements/{ackId} {
      allow read: if isAdmin() || isAuthed();
      allow create, update: if isAuthed() && request.resource.data.uid == me();
      allow delete: if isAdmin();
    }

    // ---- Public registrations from /app/register
    match /registrations/{id} {
      allow create: if true;               // public can submit
      allow read, update, delete: if isAdmin();
    }

    // ---- Programs CRUD
    match /programs/{programId} {
      allow read: if isAuthed();
      allow create, update, delete: if isAdmin();
    }

    // ---- Admin assigns a program to a participant
    match /assignments/{id} {
      allow read: if isAdmin() || (isAuthed() && resource.data.participantId == me());
      allow create, update, delete: if isAdmin();
    }

    // ---- Participant module progress
    match /progress/{id} {
      allow read: if isAdmin() || (isAuthed() && resource.data.participantId == me());
      allow create, update: if isAuthed() && request.resource.data.participantId == me();
      allow delete: if isAdmin();
    }

    // ---- Role forms (unified bucket)
    // types:
    //  service_provider_feedback, fitness_partner_group_feedback,
    //  support_worker_monitoring, coordinator_progress_overview
    match /forms/{id} {
      allow create: if isAuthed() && request.resource.data.uid == me();
      allow read, update, delete: if isAdmin();
    }
    match /programs/{programId} {
      allow read: if isAuthed(); // keep as-is for now
      allow create, update, delete: if isAdmin();
    }

   // carePlans
    match /carePlans/{id} {
      allow read: if isAdmin() || (isAuthed() && resource.data.participantId == me());
      allow create: if isAuthed() && request.resource.data.participantId == me();
      allow update, delete: if isAdmin();
    }
    // assignments: admin create/update/delete
    match /assignments/{id} {
      allow read: if isAdmin() || (isAuthed() && resource.data.participantId == me());
      allow create, update, delete: if isAdmin();
    }


  }
}
